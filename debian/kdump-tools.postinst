#! /bin/sh

set -e

update_param() {
	. "$INITCONFFILE"
        # shellcheck disable=SC2086
        eval old=\"'$'$1\"
        # shellcheck disable=SC2086
        eval new=\"'$'new_$1\"

        if test "${old-}" = "${new-}"; then
                return
        fi

        if test -z "$old"; then
                grep -Eq "^ *$1=" "$INITCONFFILE" || echo "$1=" \
                       >> "$INITCONFFILE"
        fi

	sed -e "s/^ *$1=.*/$1=$new/" < "$INITCONFFILE" > "$INITCONFFILE.$$"
	mv -f "$INITCONFFILE.$$" "$INITCONFFILE"
}

REVERSED_SIZE=0
calculate_reserved_size() {
	total_ram_kb=$(cat /proc/meminfo | grep MemTotal | awk '{print $2}')
	total_ram_gb=$(( $total_ram_kb/1024/1024 ))
	REVERSED_SIZE=$(( ($total_ram_gb/1024+2)*64 ))
}

aarch64_reserved_size() {
	calculate_reserved_size
	size=$(grep -oP 'CONFIG_ARM64_\K\d+(?=K_PAGES=y)' /boot/config-`uname -r`)
	case "$size" in
	  16)
		REVERSED_SIZE=$(( $REVERSED_SIZE+256+128 ))
		;;
	  64)
		REVERSED_SIZE=$(( $REVERSED_SIZE+256+256 ))
		;;
	  *)
		REVERSED_SIZE=$(( $REVERSED_SIZE+256 ))
	esac
}

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
# ------------------------- Debconf questions start ---------------------
	# Handle debconf
	. /usr/share/debconf/confmodule
	db_get kdump-tools/use_kdump || RET=true
	if [ "${RET}" = "true" ]; then
		# new_USE_KDUMP is used in update_param
		# shellcheck disable=SC2034
		new_USE_KDUMP="1"
	else
		# shellcheck disable=SC2034
		new_USE_KDUMP="0"
	fi
# ------------------------- Debconf questions end ---------------------

	INITCONFFILE=$(mktemp /etc/default/kdump-tools.XXXXXX)
	cp -pf /usr/share/kdump-tools/kdump-tools.conf "$INITCONFFILE"
	update_param USE_KDUMP

	# Customize crashkernel= value according to architecture
	ARCH="$(arch)"
	DEF_PRESET="384M-:128M"
	CFG_CMDLINE="GRUB_CMDLINE_LINUX_DEFAULT=\"\$GRUB_CMDLINE_LINUX_DEFAULT"
	CFG_FILE="/etc/default/grub.d/kdump-tools.cfg"
	case "$ARCH" in
		s390x)
			HAS_CRASHKERNEL="$(grep crashkernel /etc/zipl.conf)" || true
			if test -z "$HAS_CRASHKERNEL"; then
				sed -i "s|^\\s*parameters\\s*=\\s*\"\\?|&crashkernel=${DEF_PRESET} |" /etc/zipl.conf
				zipl
			fi
			CIO_IGNORE="$(cio_ignore -u -k)"
			sed -i "s/\\#KDUMP_CMDLINE_APPEND/KDUMP_CMDLINE_APPEND/" "$INITCONFFILE"
			sed -i "/KDUMP_CMDLINE_APPEND/{s|\"$| ${CIO_IGNORE}\"|}" "$INITCONFFILE"
		;;
		aarch64)
			aarch64_reserved_size
			IS_AMPERE="$(dmidecode -t processor | grep Ampere)" || true
			if test -n "$IS_AMPERE"; then
				CFG_CMDLINE="$CFG_CMDLINE crashkernel=${REVERSED_SIZE}M@8T\""
			else
				CFG_CMDLINE="$CFG_CMDLINE crashkernel=${REVERSED_SIZE}M\""
			fi
		;;
		x86_64)
			calculate_reserved_size
			CFG_CMDLINE="$CFG_CMDLINE crashkernel=128M,low crashkernel=${REVERSED_SIZE}M,high\""
		;;
	esac

	echo "$CFG_CMDLINE" > $CFG_FILE

	ucfr kdump-tools /etc/default/kdump-tools
	UCF_FORCE_CONFFMISS=1 ucf --debconf-ok "$INITCONFFILE" /etc/default/kdump-tools
	rm -f "$INITCONFFILE"
	sync /etc/default/kdump-tools
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

if command -v update-grub > /dev/null && [ -e /boot/grub/grub.cfg ]; then
	update-grub
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
